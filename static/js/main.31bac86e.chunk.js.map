{"version":3,"sources":["components/Card/Card.module.scss","components/Card/Card.js","App.js","serviceWorker.js","index.js","App.module.scss","img/cat.png"],"names":["module","exports","Card","taste","amount","gift","weight","additional","active","disabled","heading","selectedText","disabledText","mouseLeaved","onClick","onMouseLeave","className","classes","CardElement","selectedHover","topTextSelectedHover","undefined","mousesCounter","src","catImg","mainImage","alt","style","fontSize","infoDisabled","info","color","borderBottom","cursor","App","state","options","onClickHandler","index","card","setState","onMouseLeaveHandler","console","log","this","cards","map","item","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31bac86e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__37Yu0\",\"CardElement\":\"Card_CardElement__3phfI\",\"amount\":\"Card_amount__3HoBt\",\"active\":\"Card_active__w5w5S\",\"disabled\":\"Card_disabled__3L9K-\",\"selectedHover\":\"Card_selectedHover__1cTDW\",\"topTextSelectedHover\":\"Card_topTextSelectedHover__2Bbjz\",\"mainImage\":\"Card_mainImage__3oPm9\",\"info\":\"Card_info__2y6Wt\",\"infoDisabled\":\"Card_infoDisabled__3M-Tp\"};","import React from 'react'\nimport classes from './Card.module.scss'\nimport catImg from '../../img/cat.png';\n\n\n\nexport default function Card({taste, amount, gift, weight, additional, active, disabled, heading, selectedText, disabledText, mouseLeaved, onClick, onMouseLeave}) {\n\n    const mousesCounter = (gift) => {\n        if(gift === 1) {\n            return 'мышь ';\n        }else if(gift >= 2 && gift <= 4) {\n            return `${gift} мыши `;\n        }else {\n            return `${gift} мышей `;\n        }\n    }\n\n\n    return (\n        <div className={classes.Card} >\n        <div \n        className={(active && mouseLeaved) ? `${classes.CardElement} ${classes.selectedHover}` :\n            active ? `${classes.CardElement} ${classes.active}` :\n            disabled ? `${classes.CardElement} ${classes.disabled}` :\n            `${classes.CardElement}`}\n        onClick={onClick}  \n        onMouseLeave={onMouseLeave}>\n        <div className={mouseLeaved ? `${classes.topTextSelectedHover}` : undefined}>{heading}</div>\n            <h2>Нямушка</h2>\n            <h3>{taste}</h3>\n            <div>\n                <p>{amount} порций</p>\n                <p>{mousesCounter(gift)}в подарок</p>\n                <p>{additional}</p>\n            </div>\n            <img src={catImg} className={classes.mainImage} alt=\"Cat\"/>\n            <div className={classes.amount}>\n            <div style={{fontSize: '42px'}}>{weight}</div>\n            <div>кг</div>\n            </div>  \n        </div>\n        <div className={disabled ? `${classes.infoDisabled} ${classes.info}` : classes.info}>{active ?  selectedText  : disabled ? disabledText : <p>Чего сидишь? Порадуй котэ, <span onClick={onClick} style={{color: '#1698d9', borderBottom: '1px dashed #1698d9', cursor: 'pointer'}} >купи.</span></p>}</div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport classes from './App.module.scss';\nimport Card from './components/Card/Card'\n\nclass App extends Component {\n  state = {\n    options:\n    [\n      {taste : 'с фуа-гра', \n      amount: 10, \n      gift: 1, \n      weight: '0,5', \n      active: false, \n      disabled: false,\n      heading:\"Сказочное заморское явство\", \n      selectedText: 'Печень утки разварная с артишоками.',\n      disabledText: 'Печалька, с фуа-гра закончился',\n      mouseLeaved: false},\n\n      {taste : 'с рыбой', \n      amount: 40, \n      gift: 2, \n      weight: '2', \n      active: false, \n      disabled: false,\n      heading:\"Сказочное заморское явство\", \n      selectedText: 'Головы щучьи с чесноком да свежайшая сёмгушка.', \n      disabledText: 'Печалька, с рыбой закончился',\n      mouseLeaved: false},\n\n      {taste : 'с курой', \n      amount: 100, \n      gift: 5, \n      weight: '5', \n      additional: 'заказчик доволен', \n      active: false, \n      disabled: true,\n      heading:\"Сказочное заморское явство\", \n      selectedText: 'Филе из цыплят с трюфеляит в бульоне.', \n      disabledText: 'Печалька, с курой закончился',\n      mouseLeaved: false}\n\n    ]\n  };\n\n  onClickHandler = index => {\n    const card = this.state.options[index];\n    card.active = !this.state.options[index].active;\n    if(!this.state.options[index].active) {\n      card.heading = \"Сказочное заморское явство\"\n    }\n    card.mouseLeaved = false;\n    const options = [...this.state.options];\n    options[index] = card;\n    this.setState({options})\n  }\n\n  onMouseLeaveHandler = index => {\n    const card = this.state.options[index];\n    if(this.state.options[index].active === true) {\n      card.heading = 'Котэ не одобряет?';\n      card.mouseLeaved = true;\n    }\n    const options = [...this.state.options];\n    options[index] = card;\n    this.setState({options})\n  }\n\n  \n\n  render () {\n    console.log(this.state);\n    let cards = [...this.state.options].map((item, index) => {\n      return (\n        <Card \n          key = {index}\n          taste = {item.taste}\n          amount = {item.amount}\n          gift = {item.gift}\n          weight = {item.weight}\n          additional = {item.additional}\n          active = {item.active}\n          disabled = {item.disabled}\n          heading = {item.heading}\n          selectedText = {item.selectedText}\n          disabledText = {item.disabledText}\n          mouseLeaved = {item.mouseLeaved}\n          onClick = {() => this.onClickHandler(index)}\n          onMouseLeave = {() => this.onMouseLeaveHandler(index)}\n        />\n      )\n    })\n        return (\n        <div className={classes.App}>\n          <h1 className={classes.heading}>Ты сегодня покормил кота?</h1>\n          <div className={classes.cards}>\n            {cards}\n          </div>\n          \n        </div>\n      );\n    }\n  }\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"heading\":\"App_heading__2UL9e\",\"cards\":\"App_cards__2qxY2\"};","module.exports = __webpack_public_path__ + \"static/media/cat.717f53c7.png\";"],"sourceRoot":""}